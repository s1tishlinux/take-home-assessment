apiVersion: v1
kind: ConfigMap
metadata:
  name: drift-detector-config
  labels:
    app: drift-detector
data:
  DRIFT_WARNING_THRESHOLD: "0.2"
  DRIFT_CRITICAL_THRESHOLD: "0.5"
  PORT: "8080"
  BASELINE_DATA_PATH: "/app/data/baseline_data.json"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drift-detector
  labels:
    app: drift-detector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: drift-detector
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: drift-detector
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/monitor/metrics"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: drift-detector
        image: drift-detector:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
        envFrom:
        - configMapRef:
            name: drift-detector-config
        livenessProbe:
          httpGet:
            path: /monitor/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /monitor/health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
        volumeMounts:
        - name: baseline-data
          mountPath: /app/data
      volumes:
      - name: baseline-data
        configMap:
          name: baseline-data-configmap
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: baseline-data-configmap
data:
  baseline_data.json: |
    {
      "features": {
        "age": {
          "type": "numerical",
          "values": [25, 30, 35, 40, 45, 50, 55, 60, 65],
          "mean": 45.0,
          "std": 12.5
        },
        "income": {
          "type": "numerical",
          "values": [30000, 40000, 50000, 60000, 70000, 80000, 90000, 100000],
          "mean": 65000,
          "std": 20000
        },
        "tenure_months": {
          "type": "numerical",
          "values": [1, 3, 6, 12, 18, 24, 36, 48, 60],
          "mean": 24,
          "std": 18
        },
        "product_category": {
          "type": "categorical",
          "distribution": {
            "basic": 0.3,
            "standard": 0.4,
            "premium": 0.2,
            "enterprise": 0.1
          }
        }
      }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: drift-detector
  labels:
    app: drift-detector
spec:
  selector:
    app: drift-detector
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: drift-detector-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: drift-detector
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: drift-detector-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  rules:
  - host: drift-detector.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: drift-detector
            port:
              name: http